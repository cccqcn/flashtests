<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" 
				minWidth="955" minHeight="600"
				 creationComplete="application1_creationCompleteHandler(event)">
	<mx:Script>
		<![CDATA[
			import mx.controls.Button;
			import mx.controls.Label;
			import mx.events.FlexEvent;
			
			private var bgXgrids:int = 10;
			private var bgYgrids:int = 8;
			
			/**地图障碍数据**/
			public var datas:Array;
			/**寻路路径数据**/
			private var paths:Array;
			
			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				datas = new Array;
				var i:int;
				var xx:int;
				var yy:int;
				var total:int = bgXgrids * bgYgrids;
				var lbl:Label;
				for(i=0;i<total;i++)
				{
					xx = i % bgXgrids;
					yy = Math.floor(i / bgXgrids);
					if(xx == 5 && yy > 2 && yy < 6)
					{
						datas.push(1);
					}
					else
					{
						datas.push(0);
					}
					lbl = new Label;
					lbl.text = datas[i];
					lbl.width = 30;
					lbl.x = xx * 30;
					lbl.y = yy * 30;
					lbl.setStyle("paddingLeft", 0);
					lbl.setStyle("paddingRight", 0);
					grids.addChild(lbl);
				}
			}
			
			public function getPath(from:int, to:int):Array
			{
				var path:Array = new Array;
				var next:int;
				next = from;
				var way:int = getWay(next, to);
				next = towards(way);
				return path;
			}
			
			/**根据起点和终点返回朝向**/
			private function getWay(from:int, to:int):int
			{
				if(from == to)
				{
					return -1;
				}
				var fromx:int = from % bgXgrids;
				var fromy:int = Math.floor(from / bgXgrids);
				var tox:int = to % bgXgrids;
				var toy:int = Math.floor(to / bgXgrids);
				if(fromx == tox)
				{
					return toy > fromy ? 6 : 1;
				}
				else if(fromy == toy)
				{
					return tox > fromx ? 4 : 3;
				}
				else if(toy > fromy)
				{
					return fromx > tox ? 0 : 2;
				}
				else
				{
					return fromx > tox ? 5 : 7; 
				}
			}
			
			/**返回当前下标的8个朝向的下标
			 * 0  1  2
			 * 3  i  4
			 * 5  6  7
			 * **/
			private function towards(index:int):int
			{
				switch(index)
				{
					case 0:
						return index - bgXgrids - 1;
						break;
					case 1:
						return index - bgXgrids;
						break;
					case 2:
						return index - bgXgrids + 1;
						break;
					case 3:
						return index - 1;
						break;
					case 4:
						return index + 1;
						break;
					case 5:
						return index + bgXgrids - 1;
						break;
					case 6:
						return index + bgXgrids;
						break;
					case 7:
						return index + bgXgrids + 1;
						break;
				}
				return -1;
			}

		]]>
	</mx:Script>
	<mx:Canvas id="grids" x="50" y="50" width="100%" height="100%" />
</mx:Application>
